package com.network.subscriber;

import com.network.model.RestError;

import java.util.List;
import java.util.Map;

/**
 * Callback interface to be implemented by a subscriber interested in handling REST responses.
 * Created by nikita on 15/07/2016.
 */
public interface ResponseSubscriber {
    /**
     * Callback on a successful response. The data is represented as a model defined for a particular REST request in the model package and is passed as a parameter.
     *
     * @param responseModel one of several data models representing a specific REST response defined in {@link } package
     */
    void onSuccess(Object responseModel);

    /**
     * Callback on unsuccessful response. The failure occurs when the response code generated by the server is of the type 4XX, represented as {@link RestError}.
     *
     * @param restError error message encapsulated in a model - {@link RestError}.
     */
    void onFailure(RestError restError);

    /**
     * Callback on unsuccessful response. Mainly IO exceptions and runtime exceptions are the kind of failures that are triggered on this callback.
     *
     * @param t exception of type {@link Throwable}
     */
    void onFailure(Throwable t);


    /**
     * Callback after retrieval of response headers.
     * @param nameValuePairs {@link Map} of header name and it's associate value
     */
    void onResponseHeaders(Map<String, List<String>> nameValuePairs);
}
